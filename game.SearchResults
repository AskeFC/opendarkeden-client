---- g_pBack Matches (149 in 10 files) ----
CGameUpdate.cpp (client)://					g_pBack->BltPrimarySurface(&point, &rect);
CGameUpdate.cpp (client)://					//g_pCursorSurface->Restore(0, g_pBack);
CGameUpdate.cpp (client)://					g_pBack->BltPrimarySurface(&point, &rect);
CGameUpdate.cpp (client)://					g_pCursorSurface->Restore(0, g_pBack);
CGameUpdate.cpp (client):					g_pBack->BltNoColorkey( &point, g_pLast, &rect );
CGameUpdate.cpp (client):				g_pCursorSurface->Store(1, g_pBack, &point);
CGameUpdate.cpp (client):				g_pCursorSurface->Restore(surface, g_pBack);
CGameUpdate.cpp (client):				g_pCursorSurface->Store(surface, g_pBack, &point);
CGameUpdate.cpp (client):				//g_pCursorSurface->Restore(surface, g_pBack);
CGameUpdate.cpp (client):	g_pBack->SetClip(&rectClip);
CGameUpdate.cpp (client):	g_pBack->FillRect(&rect, CDirectDraw::Color(5,7,7));
CGameUpdate.cpp (client)://				g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
CGameUpdate.cpp (client)://				g_pBack->GDI_Text(10,10, str, 0xFFFFFF);
CGameUpdate.cpp (client):		//g_SetFL2Surface( g_pBack->GetSurface() );
CGameUpdate.cpp (client)://			g_pBack->Blt( &point, g_pLast, &rect );		
CGameUpdate.cpp (client):			g_pBack->BltNoColorkey( &point, g_pLast, &rect );		
CGameUpdate.cpp (client):		g_pBack->GDI_Text(351,11, (*g_pGameStringTable)[STRING_NETWORK_CONDITION_BAD].GetString(), RGB(10,10,10));
CGameUpdate.cpp (client):		g_pBack->GDI_Text(350,10, (*g_pGameStringTable)[STRING_NETWORK_CONDITION_BAD].GetString(), RGB(230,50,50));		
CGameUpdate.cpp (client):					//g_pBack->GDI_Text(270,400, str, RGB(230,230,230));
CGameUpdate.cpp (client):				//	g_pBack->GDI_Text(301,401, str, RGB(0,0,0)); 
CGameUpdate.cpp (client):				//	g_pBack->GDI_Text(300,400, str, RGB(230,230,230));
CGameUpdate.cpp (client):			g_pCursorSurface->Store(0, g_pBack, &tempPoint);
CGameUpdate.cpp (client):		//g_pBack->GetSurface()->GetDC(&hdc);
CGameUpdate.cpp (client):		//g_pBack->GetSurface()->ReleaseDC(hdc);
CGameUpdate.cpp (client):			g_pBack->DrawRect( &rect, CDirectDraw::Color(3, 30, 10) );
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(30, 10, 10));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(30, 20, 10));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(30, 10, 20));
CGameUpdate.cpp (client):					g_pBack->FillRect(&rect, CDirectDraw::Color(10, 10, 30));
CGameUpdate.cpp (client):					g_pBack->FillRect(&rect, CDirectDraw::Color(10, 30, 10));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(0, 0, 0));
CGameUpdate.cpp (client):					g_pBack->FillRect(&rect, CDirectDraw::Color(10, 30, 30));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(30, 0, 0));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(30, 30, 30));
CGameUpdate.cpp (client):						g_pBack->FillRect(&rect, CDirectDraw::Color(0, 0, 0));
CGameUpdate.cpp (client):					g_pBack->DrawRect(&rect, color[v]);
CGameUpdate.cpp (client):						g_SetFL2Surface( g_pBack->GetSurface() );
CGameUpdate.cpp (client):			g_pTopView->DrawDebugInfo( g_pBack );
CGameUpdate.cpp (client):				g_SetFL2Surface( g_pBack->GetSurface() );
CGameUpdate.cpp (client):			//if (!g_pBack->Lock()) return;
CGameUpdate.cpp (client):			//SetSurfaceInfo(&SurfaceInfo, g_pBack->GetDDSD());
CGameUpdate.cpp (client):						//g_pBack->GDI_Text(10,strY, g_DebugMessage[c], RGB(230,230,230));
CGameUpdate.cpp (client):				//g_pBack->GDI_Text(700,580, str, 0xFFFFFF);
CGameUpdate.cpp (client):				//g_pBack->GDI_Text(550,10, str, RGB(20,20,20));
CGameUpdate.cpp (client):				//g_pBack->GDI_Text(551,11, str, RGB(120,255,120));
CGameUpdate.cpp (client):			//g_pBack->GDI_Text(550,10, str, RGB(20,20,20));
CGameUpdate.cpp (client):			//g_pBack->GDI_Text(551,11, str, RGB(120,255,120));
CGameUpdate.cpp (client):			//g_pBack->Unlock();
CGameUpdate.cpp (client):				g_pBack->GDI_Text(g_x+1,g_y+1, str, RGB(20,20,20));
CGameUpdate.cpp (client):				g_pBack->GDI_Text(g_x,g_y, str, 0xFFFFFF);
CGameUpdate.cpp (client):		g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
CGameUpdate.cpp (client):		g_pBack->GDI_Text(10,10, str, 0xFFFFFF);
CGameUpdate.cpp (client):		g_pBack->GDI_Text(x+1, y+1, skillInfo.GetName(), 0);
CGameUpdate.cpp (client):		g_pBack->GDI_Text(x, y, skillInfo.GetName(), color);
CGameUpdate.cpp (client):	//g_pBack->HLine(point.x-7, point.y, 7, color);
CGameUpdate.cpp (client):	//g_pBack->HLine(point.x+1, point.y, 7, color);
CGameUpdate.cpp (client):	//g_pBack->VLine(point.x, point.y-7, 7, color);
CGameUpdate.cpp (client):	//g_pBack->VLine(point.x, point.y+1, 7, color);	
Client.cpp (client):					g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
Client.h (client):extern CSpriteSurface*		g_pBack;
ClientDef.h (client):extern CSpriteSurface*			g_pBack;
CWaitUIUpdate.cpp (client)://			g_pBack->BltAlphaSprite( &point, &ASPK[f] );
CWaitUIUpdate.cpp (client)://			g_pBack->BltAlphaSprite( &point2, &ASPK[f] );
CWaitUIUpdate.cpp (client)://				g_pBack->GDI_Text(101,11, str, RGB(0,0,0));
CWaitUIUpdate.cpp (client)://				g_pBack->GDI_Text(100,10, str, RGB(240,240,240));
CWaitUIUpdate.cpp (client)://				//g_pBack->GDI_Text(401,11, str, RGB(0,0,0));
CWaitUIUpdate.cpp (client)://				//g_pBack->GDI_Text(400,10, str, RGB(240,240,240));
CWaitUIUpdate.cpp (client)://					g_pBack->GDI_Text(101,y+1, str, RGB(0,0,0));
CWaitUIUpdate.cpp (client)://					g_pBack->GDI_Text(100,y, str, RGB(240,240,240));
CWaitUIUpdate.cpp (client)://					//	g_pBack->GDI_Text(401,y+1, str, RGB(0,0,0));
CWaitUIUpdate.cpp (client)://					//	g_pBack->GDI_Text(400,y, str, RGB(240,240,240));
CWaitUIUpdate.cpp (client)://				g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
CWaitUIUpdate.cpp (client)://				g_pBack->GDI_Text(10,10, str, 0xFFFFFF);
CWaitUIUpdate.cpp (client):		g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
CWaitUIUpdate.cpp (client):		//g_pBack->GetSurface()->GetDC(&hdc);
CWaitUIUpdate.cpp (client):		//g_pBack->GetSurface()->ReleaseDC(hdc);
CWaitUIUpdate.cpp (client):		g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
CWaitUIUpdate.cpp (client):		g_pBack->GDI_Text(10,10, str, 0xFFFFFF);
CWaitUIUpdate.cpp (client):		//g_pBack->DrawRect(&rect, 0xFFFF);
CWaitUIUpdate.cpp (client):		//g_pBack->GetSurface()->GetSurfaceDesc(&ddsd);		
CWaitUIUpdate.cpp (client):	//g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
CWaitUIUpdate.cpp (client)://	g_pBack->GDI_Text(1,1, str, 0xFFFFFF);
CWaitUIUpdate.cpp (client):	g_pBack->HLine(g_x-7, g_y, 7, color);
CWaitUIUpdate.cpp (client):	g_pBack->HLine(g_x+1, g_y, 7, color);
CWaitUIUpdate.cpp (client):	g_pBack->VLine(g_x, g_y-7, 7, color);
CWaitUIUpdate.cpp (client):	g_pBack->VLine(g_x, g_y+1, 7, color);
GameInit.cpp (client)://		g_pBack->FillSurface( CDirectDraw::Color(0,0,0) );
GameInit.cpp (client)://		g_pBack->Lock();
GameInit.cpp (client)://		g_pBack->Blt(&pointZero, &g_TitleSurface, &rect);
GameInit.cpp (client)://		g_pBack->BltSprite( &pointZero, &g_TitleSPK[ 0 ] );
GameInit.cpp (client)://			g_pBack->BltSprite( &point, &g_TitleAniSPK[g_TitleSpriteID] );
GameInit.cpp (client)://			g_pBack->BltSpriteDarkness( &point, &g_TitleAniSPK[g_TitleSpriteID], g_TitleSpriteDarkness );
GameInit.cpp (client)://		g_pBack->Unlock();
GameInit.cpp (client):				g_SetFL2Surface( g_pBack->GetSurface() );
GameInit.cpp (client):				pSurface = g_pBack;
GameInit.cpp (client):	if (g_pBack!=NULL) 
GameInit.cpp (client):		delete g_pBack;
GameInit.cpp (client):	g_pBack = new CSpriteSurface;
GameInit.cpp (client):	g_pBack->InitBacksurface();	
GameInit.cpp (client):	g_pBack->SetTransparency( 0 );
GameInit.cpp (client):	g_pBack->FillSurface( CDirectDraw::Color(0,0,0) );
GameInit.cpp (client)://		g_pTopView->SetSurface( g_pBack );
GameInit.cpp (client)://		gC_vs_ui.Init(g_pBack, UI_ResultReceiver);		
GameInit.cpp (client):		g_pBack->FillSurface( 0 );	
GameInit.cpp (client):		g_pBack->Lock();
GameInit.cpp (client):		g_pBack->BltIndexSprite( &point, &is );
GameInit.cpp (client):		g_pBack->Unlock();
GameInit.cpp (client):	SAFE_DELETE( g_pBack );
GameMain.cpp (client):CSpriteSurface*			g_pBack		= NULL;
GameMain.cpp (client):					g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
GameMain.cpp (client):			g_pBack->GDI_Text(101,201, "ID나 Password가 틀렸습니다.", RGB(0,0,0));
GameMain.cpp (client):			g_pBack->GDI_Text(100,200, "ID나 Password가 틀렸습니다.", RGB(220,220,220));
GameMain.cpp (client):			g_pBack->GDI_Text(101,221, "[ESC]를 누르세요.", RGB(0,0,0));
GameMain.cpp (client):			g_pBack->GDI_Text(100,220, "[ESC]를 누르세요.", RGB(220,220,220));
GameMain.cpp (client):					surface.BltNoColorkey(&point0, g_pBack, &rect);
GameMain.cpp (client)://			g_pBack->SaveToBMP(str);
GameMain.cpp (client):			SaveSurfaceToImage(str, *g_pBack);
GameMain.cpp (client)://		g_pBack->Lock();
GameMain.cpp (client)://		g_pBack->BltSprite( &point, pSpriteDisconected );
GameMain.cpp (client):////		g_pBack->BltSprite( &point, pSpriteDisconectedMask );
GameMain.cpp (client)://		g_pBack->Unlock();
GameMain.cpp (client)://		g_pBack->BltSprite( &point, pSpriteDisconectedMask );
GameMain.cpp (client):		g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
GameMain.cpp (client)://				g_pBack->Lock();
GameMain.cpp (client)://				g_pBack->BltSprite( &point, pSpriteDisconected );
GameMain.cpp (client)://						g_pBack->BltSprite( &point, pSpriteDisconectedCloseFocused );
GameMain.cpp (client)://						g_pBack->BltSprite( &point, pSpriteDisconectedClosePushed );
GameMain.cpp (client)://				g_pBack->Unlock();
GameMain.cpp (client):						g_pBack->BltSprite( &point, pSpriteDisconectedCloseFocused );
GameMain.cpp (client):				g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
GameMain.cpp (client):			g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
GameMain.cpp (client):	g_pBack->GDI_Text(101,201, "Server가 응답하지 않습니다.", RGB(0,0,0));
GameMain.cpp (client):	g_pBack->GDI_Text(100,200, "Server가 응답하지 않습니다.", RGB(220,220,220));
GameMain.cpp (client):	g_pBack->GDI_Text(101,221, "[ESC]를 누르세요.", RGB(0,0,0));
GameMain.cpp (client):	g_pBack->GDI_Text(100,220, "[ESC]를 누르세요.", RGB(220,220,220));
GameMain.cpp (client):	//g_pBack->GDI_Text(101,201, "잠시 기다려 주세요.", RGB(0,0,0));
GameMain.cpp (client):	//g_pBack->GDI_Text(100,200, "잠시 기다려 주세요.", RGB(220,220,220));
GameUI.cpp (client):		g_pBack->FillSurface(CDirectDraw::Color(0,0,0));		
GameUI.cpp (client):			g_pBack->BltNoColorkey( &point, g_pLast, &rect );
MTopView.cpp (client):		//g_pBack->GDI_Text(11,11, str, RGB(20,20,20));
MTopView.cpp (client):		//g_pBack->GDI_Text(10,20, str, 0xFFFFFF);
MTopView.cpp (client):		//g_pBack->GDI_Text(11,101, str, RGB(20,20,20));
MTopView.cpp (client):		//g_pBack->GDI_Text(10,100, str, RGB(255,255,255));
MTopView.cpp (client):				g_pBack->BltNoColorkey( &point, g_pLast, &rect );		
MTopView.cpp (client):				g_pLast->BltNoColorkey( &point, g_pBack, &rect );		
MTopView.cpp (client)://			g_pBack->Lock();
MTopView.cpp (client)://			g_pBack->BltSprite( &pointZero, &m_AdvacementQuestEnding[SpkIndex] );
MTopView.cpp (client)://			g_pBack->Unlock();
UIMessageManager.cpp (client):			g_pBack->BltNoColorkey( &point, g_pLast, &rect );	
